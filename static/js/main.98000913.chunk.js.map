{"version":3,"sources":["components/Feed.js","components/LoginForm.js","components/SignupForm.js","components/LoginPage.js","components/ShowPost.js","components/NewPost.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","MyMapMarker","text","className","EvMapMarker","id","to","Feed","state","data","center","lat","lng","zoom","events_near_me","showHidePostForm","bool","setState","createNewPost","refreshFeed","path","axios","get","then","axiosReturn","console","log","catch","err","this","current_user","newCenter","latitude","longitude","warn","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","event","type","onClick","reverse","post","cloudName","publicId","image","width","crop","title","liked_by","length","React","Component","LoginForm","email","password","handleSubmit","ev","props","onLoginSubmit","preventDefault","handleInput","target","name","value","onSubmit","onChange","placeholder","SignupForm","onSignupSubmit","LoginPage","x","y","z","getLocation","navigator","geolocation","getCurrentPosition","usePosition","pos","coords","handleLogin","pass","request","auth","result","localStorage","setItem","jwt","defaults","headers","common","setInterval","history","push","handleSignup","res","toggleLoginRegister","buttonVal","style","left","document","getElementById","ShowPost","disliked_by","comments","following_ids","postOwner","redirect","followButtonValue","distance_from_me","comment","setPostOwner","post_id","handleLike","new_data","likes","dislikes","concat","forEach","user","status","filter","deletePost","delete","match","params","handleFollow","method","followed_id","handleCommentInput","addCommentToPost","toFixed","includes","postData","description","href","user_id","c","some","NewPost","newPost","updatedPost","checkUploadResult","info","public_id","showWidget","widget","open","closePost","window","cloudinary","createUploadWidget","uploadPreset","error","htmlFor","App","currentUser","undefined","handleLogout","currentUserName","buttonClick","exact","render","component","Boolean","location","hostname","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.98000913.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport {Route, Link, HashRouter as Router} from 'react-router-dom';\nimport GoogleMapReact from 'google-map-react';\n\n\n\n\nconst BASE_URL = 'https://chris-ben-group-project.herokuapp.com'\nconst MyMapMarker = ({ text }) => <div className='myMarker'>{text}</div>;\nconst EvMapMarker = ({ id }) => <Link to={`/post/${id}`}><div className='evMarker'></div></Link>\n\nclass Feed extends React.Component{\n\n  state = {\n    data: [],\n    center: {lat: 0, lng: 0},\n    zoom: 13,\n    events_near_me: []\n  }\n\n  componentDidMount(){\n    this.refreshFeed('/index_near_me')\n    axios.get(`${BASE_URL}/get_current_user`)\n    .then(data => {\n      this.setState({current_user: data.data})\n      let newCenter = this.state.center\n      newCenter.lat = data.data.latitude\n      newCenter.lng = data.data.longitude\n      this.setState({center: newCenter})\n    })\n    .catch(err => console.warn(err))\n\n    axios.get(`${BASE_URL}/index_near_me`)\n    .then(data => {\n      this.setState({events_near_me: data.data})\n      console.log(data);\n    })\n    .catch(err => console.warn(err))\n  }\n\n  showHidePostForm = (bool) => {\n    this.setState({createNewPost: bool})\n  }\n\n  refreshFeed = (path) => {\n    axios.get(`${BASE_URL}${path}`)\n    .then(axiosReturn => {\n      this.setState({data: axiosReturn.data})\n      console.log(axiosReturn.data);\n    })\n    .catch(err => console.log(err));\n  }\n\n\n  render(){\n    return(\n      <div className='main-page-css'>\n          <div className=\"pimg1\">\n            <div className=\"ptext\">\n              <p className=\"border-welcome\">\n                Welcome\n              </p>\n              <p className=\"welcome-message\">A SEI 37 Project by Christopher Stevenson and Benjamin Luck</p>\n            </div>\n          </div>\n\n          <section className=\"section section-light\">\n            <h2 className=\"section section-light\">Our Website</h2>\n            <p className=\"section section-light\">\n              This is a website built to let you see what's going on around near you. A platform to see cool events that are happening near you and give you the opportunity to follow the poster and keep up to date with their events and happenings.\n            </p>\n          </section>\n\n          <div className=\"pimg2\">\n            <h5 className=\"events\">Events near you</h5>\n              {\n                this.state.center.lat && (\n                  <div className=\"bigmap\">\n                    <GoogleMapReact\n                      bootstrapURLKeys={{ key: 'AIzaSyDWqy6cjGoLQ-NtYFw0qOn3nnYM2lg8cEM' }}\n                      defaultCenter={this.state.center}\n                      defaultZoom={this.state.zoom}\n                      >\n                      <MyMapMarker\n                        lat={this.state.center.lat}\n                        lng={this.state.center.lng}\n                        text='You'\n                        />\n                      {\n                        this.state.events_near_me.map(event =>(\n                          <EvMapMarker\n                            lat={event.latitude}\n                            lng={event.longitude}\n                            id={event.id}\n                            />\n                        ))\n                      }\n                    </GoogleMapReact>\n                  </div>\n                )\n              }\n          </div>\n\n          <section className=\"section section-dark\">\n            <h2 className=\"section section-dark\">Sort your feed</h2>\n            <button\n              type=\"button\"\n              className=\"search\"\n              onClick={() => this.refreshFeed('/index_all')}\n              >All Posts</button>\n            <button\n              type=\"button\"\n              className=\"search\"\n              onClick={() => this.refreshFeed('/index_follows')}\n              >My Follows</button>\n            <button\n              type=\"button\"\n              className=\"search\"\n              onClick={() => this.refreshFeed('/index_near_me')}\n              >Near me</button>\n          </section>\n\n          <div className=\"pimg3\">\n            <div className='cards-css'>\n              <div className='card-container'>\n                {\n                  this.state.data.reverse().map(post => (\n                    <div className='card'>\n                      <Link to={`/post/${post.id}`}>\n                        <Image\n                          className='card-image'\n                          cloudName='dvmqosqwr'\n                          publicId={post.image}\n                          width=\"500\"\n                          crop=\"scale\"\n                          />\n                      </Link>\n                      <span className=\"title\">{post.title}</span>\n                      <span className=\"likes\">Likes: {post.liked_by.length}</span>\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n      </div>\n    );//return\n  }//render\n}//class Feed\n\nexport default Feed\n","import React from 'react';\n\nclass LoginForm extends React.Component{\n\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = (ev) => {\n    this.props.onLoginSubmit(this.state.email, this.state.password);\n    ev.preventDefault();\n  }\n\n  //Set state of the email and password fields\n  handleInput = (ev) => {\n    switch(ev.target.name){\n      case 'email':\n        this.setState({email: ev.target.value})\n        break;\n      case 'password':\n        this.setState({password: ev.target.value})\n    }\n  }\n\n  render(){\n    return(\n      <form id='login' className='input-group' onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleInput}\n          name=\"email\"\n          id=\"email\"\n          type=\"email\"\n          className=\"input-field\"\n          placeholder='Enter Email'\n        />\n        <input\n          onChange={this.handleInput}\n          name=\"password\"\n          id=\"password\"\n          type=\"password\"\n          className=\"input-field\"\n          placeholder='Enter Password'\n        />\n      <button className=\"submit-btn\">Login</button>\n      </form>\n    );\n  }\n}\n\n\nexport default LoginForm\n","import React from 'react';\n\nclass SignupForm extends React.Component{\n\n  state = {\n    name: '',\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = (ev) => {\n    this.props.onSignupSubmit(this.state.name, this.state.email, this.state.password);\n    ev.preventDefault();\n  }\n\n  //Set state of the email and password fields\n  handleInput = (ev) => {\n    switch(ev.target.name){\n      case 'name':\n        this.setState({name: ev.target.value})\n        break;\n      case 'email':\n        this.setState({email: ev.target.value})\n        break;\n      case 'password':\n        this.setState({password: ev.target.value})\n    }\n  }\n\n  render(){\n    return(\n      <form id=\"register\" className=\"input-group\" onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleInput}\n          name=\"name\"\n          id=\"name\"\n          type=\"text\"\n          className=\"input-field\"\n          placeholder=\"Enter Name\"\n        />\n        <input\n          onChange={this.handleInput}\n          name=\"email\"\n          id=\"email\"\n          type=\"email\"\n          className=\"input-field\"\n          placeholder=\"Enter Email\"\n        />\n        <input\n          onChange={this.handleInput}\n          name=\"password\"\n          id=\"password\"\n          type=\"password\"\n          className=\"input-field\"\n          placeholder=\"Enter Password\"\n        />\n      <button className=\"submit-btn\">Sign Up</button>\n      </form>\n    );\n  }\n}\n\n\nexport default SignupForm\n","import React from 'react'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport LoginForm from './LoginForm'\nimport SignupForm from './SignupForm'\n\n\nconst BASE_URL = 'https://chris-ben-group-project.herokuapp.com'\n\n\nclass LoginPage extends React.Component{\n\n  state = {\n    // redirect: null,\n    //xyz are the login, register and button containers\n    x: null,\n    y: null,\n    z: null\n  }\n\n  componentDidMount(){\n    this.setState({\n      x: document.getElementById('login'),\n      y: document.getElementById('register'),\n      z: document.getElementById('btn')\n    })\n  }\n\n  getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.usePosition);\n    } else {\n      console.warn('Geolocation not supported by this browser.');\n    }\n  }\n\n  usePosition = (pos) => {\n    axios.post(`${BASE_URL}/update_my_location`, {\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude\n    })\n    .then()\n    .catch(err => console.warn(err))\n  }\n\n\n  handleLogin = (email, pass) => {\n    const request = {'email': email, 'password': pass}\n    axios.post(`${BASE_URL}/api/user_token`, {auth: request})\n    .then(result => {\n      localStorage.setItem(\"jwt\", result.data.jwt)\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + result.data.jwt;\n      axios.get(`${BASE_URL}/get_current_user`)\n      .then(data => {\n        this.props.handleLogin(data.data);\n        this.getLocation();\n        setInterval(this.getLocation, 60000)\n        this.props.history.push('/');\n      })\n      .catch(err => console.warn(err))\n    })\n    .catch(err => {\n      console.warn(err)\n    })\n\n\n  } // handleLogin\n\n  handleSignup = (name, email, pass) => {\n    axios.post(`${BASE_URL}/api/users`, {\n      name: name,\n      email: email,\n      password: pass\n    })\n    .then(res => {\n      this.handleLogin(email, pass);\n    })\n    .catch(err => console.warn(err))\n  }\n\n  toggleLoginRegister = (buttonVal) => {\n    let x = this.state.x\n    let y = this.state.y\n    let z = this.state.z\n    if(buttonVal === 'l'){\n      x.style.left = \"50px\";\n      y.style.left = \"450px\";\n      z.style.left = \"0\";\n    } else if(buttonVal === 'r'){\n      x.style.left = \"-400px\";\n      y.style.left = \"50px\";\n      z.style.left = \"110px\";\n    }\n  }\n\n  render(){\n    // if (this.state.redirect) {\n    //   console.log('Redirecting');\n    //   return <Redirect to={this.state.redirect} />\n    // }\n    return(\n      <div className='login-page-css'>\n        <div className=\"hero\">\n          <div className=\"form-box\">\n            <h2 className=\"title\">Our Website Name</h2>\n            <div className=\"button-box\">\n              <div id=\"btn\"></div>\n              <button className=\"toggle-btn\" onClick={() => this.toggleLoginRegister('l')}>Log In</button>\n              <button className=\"toggle-btn\" onClick={() => this.toggleLoginRegister('r')}>Register</button>\n            </div>\n            <LoginForm onLoginSubmit={this.handleLogin}/>\n            <SignupForm onSignupSubmit={this.handleSignup}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage\n","import React from 'react'\nimport axios from 'axios'\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport { Redirect, Link } from \"react-router-dom\";\nimport GoogleMapReact from 'google-map-react';\n\nimport '../App.css'\n\nconst MapMarker = ({ text }) => <div id='mapMarker'>{text}</div>;\nconst BASE_URL = 'https://chris-ben-group-project.herokuapp.com'\nconst MAP_URL = 'https://www.google.com/maps/dir/?api=1&destination='\n\nclass ShowPost extends React.Component{\n\n  state = {\n    data: {\n      liked_by: [],\n      disliked_by: [],\n      comments: []\n    },\n    current_user: {\n      following_ids: []\n    },\n    postOwner: {\n      name: '',\n      id: 0\n    },\n    redirect: null,\n    followButtonValue: null,\n    center: {lat: 0, lng: 0},\n    zoom: 13,\n    distance_from_me: null,\n    comment: ''\n  }\n\n  componentDidMount(){\n    let postLikes\n    let postDislikes\n    axios.get(`${BASE_URL}/posts/${this.props.match.params.id}.json`)\n    .then(axiosReturn => {\n      this.setState({data: axiosReturn.data})\n\n      let newCenter = this.state.center\n      newCenter.lat = this.state.data.latitude\n      newCenter.lng = this.state.data.longitude\n      this.setState({center: newCenter})\n\n      axios.get(`${BASE_URL}/distance_from_me/${this.state.data.id}`)\n      .then(res => {\n        this.setState({distance_from_me: res.data.toFixed(2)})\n      })\n      .catch(err => console.warn(err))\n\n      axios.get(`${BASE_URL}/get_owner_of_post/${this.state.data.id}`)\n      .then(res => {\n        let postOwner = this.state.postOwner\n        postOwner.name = res.data.name\n        postOwner.id = res.data.id\n        this.setState({postOwner: postOwner})\n        axios.get(`${BASE_URL}/get_current_user`)\n        .then(axiosReturn => {\n          this.setState({current_user: axiosReturn.data})\n          if(this.state.current_user.id != this.state.postOwner.id){\n            if(this.state.current_user.following_ids.includes(this.state.postOwner.id)){\n              this.setState({followButtonValue: 'Unfollow'})\n            } else {\n              this.setState({followButtonValue: 'Follow'})\n            }\n          }\n        })\n        .catch(err => console.log(err))\n      })\n      .catch(err => console.warn(err))\n    })\n    .catch(err => console.log(err));\n  }\n\n\n  setPostOwner = (post_id) => {\n    axios.get(`${BASE_URL}/get_owner_of_post/${post_id}`)\n    .then(res => {\n      let postOwner = this.state.postOwner\n      postOwner.name = res.data.name\n      postOwner.id = res.data.id\n      this.setState({postOwner: postOwner})\n    })\n    .catch(err => console.warn(err))\n  }\n\n  //likes method\n  handleLike = (ev) => {\n\n    //declare new variables to be used as reference points\n    let new_data = this.state.data\n    let likes = new_data.liked_by\n    let dislikes = new_data.disliked_by\n    let totalLikes = likes.concat(dislikes)\n\n    //loop through all likes and dislikes. Delete all that relate to the current user\n    totalLikes.forEach(user => {\n      if(user.id === this.state.current_user.id){\n        axios.post(`${BASE_URL}/remove_like_from_post`, {\n          post_id: this.state.data.id\n        })\n        .then()\n        .catch(err => console.warn(err))\n      }\n    })\n\n    //If the button isn't an 'unlike' button, create a new Like entry in the DB\n    if(ev.target.value != 'unlike'){\n      axios.post(`${BASE_URL}/create_like_for_this_post`, {\n        post_id: this.state.data.id,\n        status: ev.target.value\n      })\n      .then()\n      .catch(err => console.warn(err))\n    }\n\n    //below code is to update the local state so that changes are reflected immediately on the page\n    likes = likes.filter(user => {\n      return user.id != this.state.current_user.id\n    })\n    dislikes = dislikes.filter(user => {\n      return user.id != this.state.current_user.id\n    })\n\n    if(ev.target.value === 'like'){\n      likes.push(this.state.current_user)\n    }else if(ev.target.value === 'dislike'){\n      dislikes.push(this.state.current_user)\n    }\n    new_data.liked_by = likes\n    new_data.disliked_by = dislikes\n    this.setState({data: new_data})\n  } // handleLike\n\n  deletePost = () => {\n    axios.delete(`${BASE_URL}/posts/${this.props.match.params.id}`)\n    .then(res => {\n      this.setState({redirect: '/'})\n    })\n    .catch(err => console.warn(err))\n  }\n\n  handleFollow = (method) => {\n      axios.post(`${BASE_URL}/follow_this_user`, {\n        followed_id: this.state.postOwner.id,\n        method: method\n      })\n      .then(res => {\n        if(this.state.followButtonValue === 'Follow'){\n          this.setState({followButtonValue: 'Unfollow'})\n        } else if(this.state.followButtonValue === 'Unfollow'){\n          this.setState({followButtonValue: 'Follow'})\n        }\n      })\n      .catch(err => console.warn(err))\n  }\n\n  handleCommentInput = (ev) => {\n    this.setState({comment: ev.target.value})\n  }\n\n  addCommentToPost = () => {\n    axios.post(`${BASE_URL}/posts/${this.state.data.id}/add_comment_to_post`, {\n      comment: this.state.comment\n    })\n    .then(res => {\n      this.setState({data: res.data, comment: ''})\n    })\n    .catch(err => console.warn(err))\n  }\n\n\n  render(){\n\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    let postData = this.state.data\n    return(\n      <div className=\"post-container-css\">\n        <div className='post'>\n          <span className=\"name\">{this.state.postOwner.name}</span>\n          <Image\n            className='image'\n            cloudName='dvmqosqwr'\n            publicId={postData.image}\n            width=\"700\"\n            crop=\"scale\"\n            />\n          <span className=\"title\">{postData.title}</span>\n          <span className=\"descript\">{postData.description}</span>\n          <span className=\"location\">Distance from me: {this.state.distance_from_me}km.</span>\n          <a\n            className=\"directions\"\n            target=\"_blank\"\n            href={`${MAP_URL}${postData.latitude},${postData.longitude}`}>\n            Get Directions\n          </a>\n          <span className=\"likes\">Likes: {postData.liked_by.length}</span>\n          <span className=\"dislikes\">DisLikes: {postData.disliked_by.length}</span>\n          {\n            postData.user_id === this.state.current_user.id\n            &&\n            <span className=\"delete\" onClick={this.deletePost}>Delete Post</span>\n          }\n          <div className='comments-container'>\n            {\n              this.state.data.comments.reverse().map(c => <p className=\"comments\">{c.comment}</p>)\n            }\n          </div>\n          <input\n            id='comment-input'\n            onChange={this.handleCommentInput}\n            type=\"text\"\n            className=\"make-comment\"\n            placeholder=\"Add a comment...\"\n          />\n        <button type=\"submit\" onClick={this.addCommentToPost} className=\"comment\">Comment</button>\n          {\n            this.state.followButtonValue\n            &&\n            <button\n              className='follow'\n              onClick={() => this.handleFollow(this.state.followButtonValue)}>\n              {this.state.followButtonValue} {this.state.postOwner.name}\n            </button>\n          }\n          <div className='buttonBox'>\n            {\n              postData.liked_by.some(user => user.id === this.state.current_user.id)\n              ?\n              <button onClick={this.handleLike} value='unlike'>Remove Like</button>\n              :\n              <button onClick={this.handleLike} value='like'>Like</button>\n            }\n            {/* The same for dislikes */}\n            {\n              postData.disliked_by.some(user => user.id === this.state.current_user.id)\n              ?\n              <button onClick={this.handleLike} value='unlike'>Remove Dislike</button>\n              :\n              <button onClick={this.handleLike} value='dislike'>Dislike</button>\n            }\n          </div>\n        </div>\n      </div>\n    );//return\n  }//render\n}// Class ShowPost\n\nexport default ShowPost\n","import React from 'react'\nimport axios from 'axios'\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\n\n\n\nclass NewPost extends React.Component{\n\n  state = {\n    newPost: {\n      title: '',\n      description: '',\n      image: ''\n    }\n  }\n\n  componentDidMount(){\n    this.setState({widget: window.cloudinary.createUploadWidget({\n      cloudName: 'dvmqosqwr',\n      uploadPreset: 'k1jbpdku'},\n      (error, result) => {this.checkUploadResult(result)})})\n  }\n\n  handleSubmit = (ev) => {\n    this.props.showHidePostForm(false);\n    axios.post('http://localhost:3000/posts', {\n      title: this.state.newPost.title,\n      description: this.state.newPost.description,\n      image: this.state.newPost.image\n    })\n    .then()\n    .catch(err => console.warn(err))\n    ev.preventDefault();\n  }\n\n\n  handleInput = (ev) => {\n    const updatedPost = this.state.newPost\n    switch(ev.target.name){\n      case 'title':\n        updatedPost.title = ev.target.value\n        break;\n      case 'description':\n        updatedPost.description = ev.target.value\n    }\n    this.setState({newPost: updatedPost})\n  }\n\n  checkUploadResult = (ev) => {\n    if(ev.event === 'success'){\n      const updatedPost = this.state.newPost\n      updatedPost.image = ev.info.public_id\n      this.setState({newPost: updatedPost})\n    }\n  }\n\n  showWidget = (widget) => {\n    this.state.widget.open();\n  }\n\n  closePost = () => {\n    this.props.showHidePostForm(false);\n  }\n\n  render(){\n\n    return(\n      <div className='newpost-css'>\n        <form onSubmit={this.handleSubmit}>\n          <h3>New Post</h3>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            onChange={this.handleInput}\n            name=\"title\"\n            id=\"title\"\n            type=\"text\"\n          />\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            onChange={this.handleInput}\n            name=\"description\"\n            id=\"description\"\n            type=\"textarea\"\n          ></textarea>\n          <div className='uploadImage' onClick={this.showWidget}>Upload Photo</div>\n          <Image\n            className='previewImg'\n            cloudName='dvmqosqwr'\n            publicId={this.state.newPost.image}\n            width=\"200\"\n            crop=\"scale\"\n            />\n          <button>Share</button>\n          <p className='closeButton' onClick={this.closePost}>X</p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewPost\n","import React from 'react';\nimport axios from 'axios';\nimport {Redirect, Route, Link, HashRouter as Router} from 'react-router-dom';\n\n\nimport Feed from './components/Feed'\nimport LoginPage from './components/LoginPage'\nimport ShowPost from './components/ShowPost'\nimport NewPost from './components/NewPost'\n\n\nimport './css/feed.css'\nimport './css/cards.css'\nimport './css/login.css'\nimport './css/newpost.css'\nimport './css/showpage.css'\nimport './css/header-footer.css'\n\n\nconst BASE_URL = 'http://localhost:3000'\n\nclass App extends React.Component{\n\n\n\n  state = {\n    currentUser: undefined,\n    createNewPost: false\n  }\n\n  componentDidMount(){\n    console.log(this.props);\n\n  }\n\n\n  handleLogin = (user) => {\n    this.setState({currentUser: user})\n  }\n\n  handleLogout = () => {\n    this.setState({currentUserName: undefined})\n    axios.defaults.headers.common['Authorization'] = undefined;\n  }\n\n  buttonClick = () => {\n    console.log('This.props is');\n    console.log(this.props);\n  }\n\n  showHidePostForm = (bool) => {\n    this.setState({createNewPost: bool})\n  }\n\n\n\n  render(){\n    return(\n      <Router>\n        {\n          this.state.currentUser !== undefined && (\n            <div className='header-footer-css'>\n              <header>\n                <a className=\"title\">Our Website Name</a>\n                <nav>\n                  <ul className=\"nav_links\">\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/'>My Profile</Link></li>\n                    <li><Link onClick={this.handleLogout} to='/login'>Logout</Link></li>\n                  </ul>\n                </nav>\n                <button onClick={() => this.showHidePostForm(true)}>New Post</button>\n              </header>\n            </div>\n          )\n        }\n        {\n          this.state.createNewPost\n          &&\n          <NewPost showHidePostForm={this.showHidePostForm} refreshFeed={this.refreshFeed}/>\n        }\n        <Route\n          exact path='/login'\n          render={(props) => <LoginPage handleLogin={this.handleLogin} {...props} />}\n          />\n        <Route exact path='/' component={Feed}/>\n        <Route exact path='/post/:id' component={ShowPost}/>\n        {\n          this.state.currentUser !== undefined && (\n            <div className='header-footer-css'>\n              <footer>\n                <a className=\"title2\" href=\"#\">Developed by Stevo and Gingee</a>\n                <nav className=\"fill\">\n                  <ul className=\"nav_links\">\n                    <div className=\"icons\">\n                      <li>\n                        <a href=\"https://github.com/Chris-Stevenson-Git/Group-Proj-React-Frontend\">\n                          <i className=\"fa fa-github\"></i>\n                        </a>\n                      </li>\n                      <li><a href=\"https://twitter.com/50cent/status/22366597012\"><i className=\"fa fa-twitter\"></i></a></li>\n                      <li><a href=\"https://www.instagram.com/p/3h2BrqmDbo/?utm_source=ig_embed\"><i className=\"fa fa-instagram\"></i></a></li>\n                    </div>\n                  </ul>\n                </nav>\n              </footer>\n            </div>\n          )\n        }\n\n      </Router>\n    )\n  }//render\n}//class App\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}